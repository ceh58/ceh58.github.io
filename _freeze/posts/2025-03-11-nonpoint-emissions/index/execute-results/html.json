{
  "hash": "9760746a30f8b0c78ed8ba4d0b812736",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Emissions in the USA\"\ndescription: \"A visualization of the *drivers* behind nonpoint emissions.\"\nauthor:\n  - name: Carmen Hoyt\n    url: https://ceh58.github.io/\n    affiliation: Master of Environmental Data Science Program @ The Bren School (UCSB)\n    affiliation-url: https://ucsb-meds.github.io/ \ndate: last-modified\ncategories: [R, EDS240, ggplot, Data Visualization]\nformat:\n  html:\n      toc: true\n      code-fold: true\n      echo: true\n      message: false\n      eval: true\n      warning: false\nimage: car.jpg\ndraft: false \neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n::: {.cell-output-display}\n![](HW4.png){width=1650}\n:::\n:::\n\n\n\n# Emissions in the USA\n\nIn 2020, the United States was the second highest emitter of greenhouse gasses, globally[^1]. Generally, emission sources are classified as either **Point** or **Nonpoint.** Point sources are emissions that can be attributed to specific places, including power plants and airports, while nonpoint sources are aggregates of emissions that cannot be traced to a single location but rather are estimated across a space. \n\nIn the Environmental Protection Agency’s (EPA) [National Emissions Inventory (NEI)](https://awsedap.epa.gov/public/single/?appid=20230c40-026d-494e-903f-3f112761a208&sheet=5d3fdda7-14bc-4284-a9bb-cfd856b9348d&opt=ctxmenu,currsel) dataset, point sources comprise 98% of the total emissions (in tons) reported in the 2020 release[^2]. Since it’s inherently harder to conceptualize *dispersed* emissions, I decided to focus on characterizing these **Nonpoint** sources, with specific attention paid to the **Mobile** sector. The mobile sector can be divided into **Onroad** and **Nonroad** categories, where onroad sources include motorized vehicles such as cars, motorcycles, trucks, and buses and nonroad sources include but are not limited to equipment from the construction, agricultural, and industrial industries[^3].\n\n## Design Choices\n\nI chose three fundamental graphic forms: first, I gravitated towards the bar chart to visualize the two mobile sector categories (**Onroad** and **Nonroad**) because it allowed me to convey the relative contribution of each category towards the total **Mobile** sector emissions based on the lengths of each bar. I further broke these two categories down into “Diesel” and “Other” (which includes gasoline) to help visualize the fuel types of the equipment (and thus infer the type of equipment) that is responsible for these emissions. Originally, I had planned to use three separate bars as “smokestacks”, but I changed my mind because I felt that smokestacks better represented *point* sources better than nonpoint sources. Second, I chose two donut charts: one to show the sector breakdown of nonpoint emissions, which turned out to be 99% from the **Mobile** sector, and the second to give context to the **Other** sectors considered nonpoint sources of emissions. Finally, I determined that the best way to show the spatial allocation of emissions was to display emissions (in tons) per square mile on a stylized map of the U.S. with states shaded by tons/square mile. I chose to normalize by area (square mile) to give a better sense of how the size of states related to their emissions contributions.\n\nOverall, I kept text to a minimum. I labeled the bars on the bar chart to distinguish between the two **Mobile** sector categories and annotated with the total tons of emissions for each, but I opted to use color (black and gray) to tell the story of the fuel type breakdown (and included the fuel type legend as simple text). I chose to add a title to the map to make it clear what it was showing and to include the units (tons/square mile) as a subtitle. Lastly, I didn’t annotate the donut charts because I felt that the legends already provided a lot of text and I felt that the sector names provided enough context along with the percentages.\n\nI used `theme_void()` for all my base themes to make customizing the style relatively simple. I didn’t include axes on any of my graphs because they use color and size to convey the necessary information without overloading on numbers. I felt that numbers were difficult to contextualize, especially in tons, and I wanted my overall infographic to be free from the clutter of grid lines and extra axes.\n\nI intentionally filtered color palettes for colorblind-friendly options. I pulled specific colors from [“palettetown::gloom”](https://emilhvitfeldt.github.io/r-color-palettes/discrete/palettetown/gloom/) (such as the orange for the map and the yellow for the lines on the road) to fit the overall theme of the larger infographic without being overwhelming on the color front. I think the grayscale of the “road” bar chart balances the brighter colors of the map, and I opted for a solid light gray background for contrast. I chose orange for the map since it didn't immediately infer any connections to sectors listed in the \"Other\" donut chart, as the map represents *total* nonpoint emissions. The collection as a whole helps to convey the “doom and gloom” emotion that I am invoking with my exploration of emissions. \n\nI chose to use a bolded IBM Plex Sans Condensed for title text and a normal IBM Plex Sans for subtext (annotations, axis labels, etc.) because it has a modern, respectable presence without being overly official. I like using the bold for the few titles and definitions that are present to draw the readers attention to the main topics of the **Nonpoint Emissions** infographic: emissions by **Sector**, the breakdown between the **Nonroad** vs. **Onroad** categories in the Mobile sector, and **Emissions by State**. \n\nI chose relatively simple graphic forms as well as a simple general layout to avoid information overload. I removed most of the legends and/or opted for simple text legends where possible. I used minimal objects and turned the **Onroad** bar into a road to make it visually enticing yet still informative. By removing axes and non-essential graphic elements, I did my best to generally minimize the data-ink ratio.  \n\nI used one small car object to contextualize the focus on the **Mobile** sector as the majority sector in the donut chart. This, in combination with the “road” bar chart, further helps to place responsibility for the majority of **Nonpoint** emissions on the mobile sector, including cars, trucks, construction equipment, etc. \n\nNonpoint emissions are such that they do not have a specific fixed location. Thus, my primary message revolves around uncovering the *what* and the *where* concerning nonpoint emissions. I wanted to convey what comprises nonpoint emissions, and I felt that focusing on the **Mobile** sector with two of my graphic forms helped answer that question. Even though nonpoint emissions aren’t location specific, I still wanted to convey where these emissions are generally concentrated, which I did with the state map. \n\nEmissions come from many, many sources. However, I felt that it was easier to focus on the **Mobile** sector since most people can relate to driving a car, taking public transportation, or even contributing to the larger network of shipping through online purchases or getting groceries. My intention was to send the message that emissions from the mobile sector could be realistically addressed rather than thinking conceptually about sources of emissions that we typically don’t see in everyday life. \n\nYou can access my code for each graph by clicking on the respective arrows below.\n\n[^1]: [EPA Global Greenhouse Gas Overview](https://www.epa.gov/ghgemissions/global-greenhouse-gas-overview)\n\n[^2]: To give this better context, I included an orange bar to represent 2% of the total page space on the infographic, proportional to the contribution of nonpoint emissions to total emissions.\n\n[^3]: [NEI support documentation](https://www.epa.gov/air-emissions-inventories/2020-national-emissions-inventory-nei-technical-support-document-tsd)\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Load Data + Packages\"}\n# -------- Load packages --------\nlibrary(tidyverse)\nlibrary(here)\nlibrary(ggwordcloud)\nlibrary(geofacet) \nlibrary(paletteer)\nlibrary(showtext)\nlibrary(patchwork)\nlibrary(janitor)\n\n# -------- Load data --------\nemissions_cleaned_non_point <- read_csv(here(\"posts/\", \"2025-03-11-nonpoint-emissions/\", \"data\", \"emissions_cleaned.csv\"), show_col_types = FALSE) %>%\n  clean_names()\n\n# Get \"Gloom\" colors\nmy_colors <- paletteer::paletteer_d(\"palettetown::gloom\")\n\nshowtext_auto()\n\n# Import Google fonts\nfont_add_google(name = \"IBM Plex Sans Condensed\", family = \"ibm_condensed\")\ntitletext <- \"ibm_condensed\"\n\nfont_add_google(name = \"IBM Plex Sans\", family = \"ibm_plex\")\nsubtext <- \"ibm_plex\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Bar Graph\"}\n# Emissions for mobile sector\nroad_data <- emissions_cleaned_non_point %>%\n  group_by(eis_sector) %>%\n  summarise(emissions_tons = sum(emissions_tons)) %>%\n  # Broadly define sectors\n  mutate(sector = case_when(\n    str_detect(eis_sector, \"Agriculture\") ~ \"Agriculture\",\n    str_detect(eis_sector, \"Biogenics\") ~ \"Biogenics\",\n    str_detect(eis_sector, \"Bulk Gasoline\") ~ \"Bulk Gasoline Terminals\",\n    str_detect(eis_sector, \"Commercial Cooking\") ~ \"Commercial Cooking\",\n    str_detect(eis_sector, \"Dust\") ~ \"Dust\",\n    str_detect(eis_sector, \"Fires\") ~ \"Fires\",\n    str_detect(eis_sector, \"Fuel Comb\") ~ \"Fuel Comb\",\n    str_detect(eis_sector, \"Gas Stations\") ~ \"Gas Stations\",\n    str_detect(eis_sector, \"Industrial Processes\") ~ \"Industrial Processes\",\n    str_detect(eis_sector, \"Miscellaneous\") ~ \"Misc\",\n    str_detect(eis_sector, \"Mobile\") ~ \"Mobile\",\n    str_detect(eis_sector, \"Solvent\") ~ \"Solvent\",\n    str_detect(eis_sector, \"Waste Disposal\") ~ \"Waste Disposal\"\n  )) %>%\n  # Filter for mobile sector\n  filter(sector == \"Mobile\") %>%\n  mutate(cleaned_sector = str_remove(eis_sector, \"Mobile - \")) %>%\n  # Broadly define breakdown of mobile sector\n  mutate(cleaned_label = case_when(\n    str_detect(cleaned_sector, \"Commercial Marine Vessels\") ~ \"Commercial Marine Vessels\",\n    str_detect(cleaned_sector, \"Locomotives\") ~ \"Locomotives\",\n    str_detect(cleaned_sector, \"Non-Road Equipment - Diesel\") ~ \"Nonroad: Diesel\",\n    str_detect(cleaned_sector, \"Non-Road Equipment - Gasoline\") ~ \"Nonroad: Gas\",\n    str_detect(cleaned_sector, \"Non-Road Equipment - Other\") ~ \"Nonroad: Other\",\n    str_detect(cleaned_sector, \"On-Road Diesel Heavy Duty Vehicles\") ~ \"Onroad: Diesel (Heavy Duty Vehicles)\",\n    str_detect(cleaned_sector, \"On-Road Diesel Light Duty Vehicles\") ~ \"Onroad: Diesel (Light Duty Vehicles)\",\n    str_detect(cleaned_sector, \"On-Road non-Diesel Heavy Duty Vehicles\") ~ \"Onroad: non-Diesel (Heavy Duty Vehicles)\",\n    str_detect(cleaned_sector, \"On-Road non-Diesel Light Duty Vehicles\") ~ \"Onroad: non-Diesel (Light Duty Vehicles)\"\n  )) %>%\n  # Clean subsector label\n  mutate(cleaned_subsector = case_when(\n    str_detect(cleaned_sector, \"Commercial Marine Vessels\") ~ \"Nonpoint (Other)\",\n    str_detect(cleaned_sector, \"Locomotives\") ~ \"Nonpoint (Other)\",\n    str_detect(cleaned_sector, \"Non-Road Equipment - Diesel\") ~ \"Nonroad\",\n    str_detect(cleaned_sector, \"Non-Road Equipment - Gasoline\") ~ \"Nonroad\",\n    str_detect(cleaned_sector, \"Non-Road Equipment - Other\") ~ \"Nonroad\",\n    str_detect(cleaned_sector, \"On-Road Diesel Heavy Duty Vehicles\") ~ \"Onroad\",\n    str_detect(cleaned_sector, \"On-Road Diesel Light Duty Vehicles\") ~ \"Onroad\",\n    str_detect(cleaned_sector, \"On-Road non-Diesel Heavy Duty Vehicles\") ~ \"Onroad\",\n    str_detect(cleaned_sector, \"On-Road non-Diesel Light Duty Vehicles\") ~ \"Onroad\"\n  )) %>%\n  # Label fuel types\n  mutate(fuel_type = case_when(\n    str_detect(cleaned_sector, \"Commercial Marine Vessels\") ~ \"Nonpoint\",\n    str_detect(cleaned_sector, \"Locomotives\") ~ \"Nonpoint\",\n    str_detect(cleaned_sector, \"Non-Road Equipment - Diesel\") ~ \"Diesel\",\n    str_detect(cleaned_sector, \"Non-Road Equipment - Gasoline\") ~ \"Other\",\n    str_detect(cleaned_sector, \"Non-Road Equipment - Other\") ~ \"Other\",\n    str_detect(cleaned_sector, \"On-Road Diesel Heavy Duty Vehicles\") ~ \"Diesel\",\n    str_detect(cleaned_sector, \"On-Road Diesel Light Duty Vehicles\") ~ \"Diesel\",\n    str_detect(cleaned_sector, \"On-Road non-Diesel Heavy Duty Vehicles\") ~ \"Other\",\n    str_detect(cleaned_sector, \"On-Road non-Diesel Light Duty Vehicles\") ~ \"Other\"\n  )) %>%\n  # Calculate emissions\n  group_by(cleaned_subsector) %>%\n  mutate(total_emissions = sum(emissions_tons))\n\n# Bar chart\nroad <- road_data %>%\n  filter(!cleaned_subsector == \"Nonpoint (Other)\") %>%\n  ggplot(aes(cleaned_subsector, emissions_tons, fill = fuel_type)) +\n  \n  # choose \"smokestack\" esc color\n  geom_bar(stat = \"identity\") +\n  \n  # label bars with emissions\n  geom_text(aes(cleaned_subsector, total_emissions, label = scales::label_comma(accuracy = 1, suffix = \" t\")(total_emissions)),\n            vjust = - 0.5, \n            size = 6,\n            family = subtext,\n            fontface = \"bold\") +\n  \n  scale_fill_manual(values = c(\"gray40\", \"gray10\")) +\n  \n  # set base theme\n  theme_void() +\n  \n  # adjust theme\n  theme(\n    # add x axis text back\n    axis.text.x = element_text(family = subtext,\n                               face = \"bold\",\n                               size = 25,\n                               \n                               # move closer to bars\n                               margin = margin(t = -20,\n                                               b = 10)),\n    \n    aspect.ratio = 2,\n    \n    legend.position = \"none\",\n    \n    # extend plot margin at top\n    plot.margin = margin(t = 0,\n                         r = 10,\n                         l = 10,\n                         b = 0)\n  )\n\n# View\nroad\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){fig-alt='A bar chart showing the breakdown of emissions (in tons) by nonroad and onraod divisions of the mobile sector, further broken down into diesel and other fuel types.' width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Map\"}\n# Convert built-in state.area to a df\nstate_data <- data.frame(\n  state = state.name,\n  abbrv = state.abb,\n  area = state.area\n)\n\n# Merge state and emissions datasets using left_join\nstate <- emissions_cleaned_non_point %>%\n  left_join(state_data, by = \"state\") %>%\n  group_by(state, abbrv, area) %>%\n  summarise(total_emissions = sum(emissions_tons)) %>%\n  mutate(rel_emissions = total_emissions/area) %>%\n  arrange(desc(rel_emissions)) %>%\n  mutate(opacity = rel_emissions/5068.261374)\n\n# Pull specific colors from palette\ncore = \"#F87000FF\"\naccent = \"gray20\"\n\n# Create map\nmap <- ggplot(state) +\n\n  # Initiate a plot with a rectangles, shading by relative observations (opacity value) \n  geom_rect(aes(xmin = 0, xmax = 1, ymin = 0, ymax = 1, alpha = opacity), \n            fill = core) +\n  \n  # Label with state abbreviation\n  geom_text(aes(x = 0.5, y = 0.7, label = abbrv), \n            size = 7, \n            family = subtext,\n            color = \"black\") +\n  \n  # Label with observations\n  geom_text(aes(x = 0.5, y = 0.3, label = round(rel_emissions, 0)), \n            size = 5, \n            family = subtext,\n            color = \"black\")  +\n\n  # Break rectangle up by state\n  geofacet::facet_geo(~state) +\n\n  # Make each rectangle the same size\n  coord_fixed(ratio = 1) +\n  \n  # Add description line as subtitle\n  labs(title = \"Emissions by State\",\n       subtitle = \"Tons per Square Mile\",\n       caption = \"Data Source: EPA National Emissions Inventory 2020\"\n       ) +\n  \n  # Apply empty theme\n  theme_void() +\n  \n  # Customize theme\n  theme(\n    \n    # Remove headers \n    strip.text = element_blank(),\n    \n    # Adjust the font and color of the title\n    plot.title = element_text(family = titletext,\n                              face = \"bold\",\n                              size = 20, \n                             # hjust = 0.5,  \n                              margin = margin(t = 10,\n                                              b = 10)),\n    \n    # Adjust the font and color of the title\n    plot.subtitle = element_text(family = subtext,\n                                 size = 15, \n                                # hjust = 0.5,  \n                                 margin = margin(b = 10)),\n    \n    plot.caption = element_text(famil = subtext,\n                                size = 10,\n                                margin = margin(t = 10),\n                                hjust = 0),\n    \n    # Remove legend\n    legend.position = \"none\",\n    \n    plot.margin = margin(b = 10, t = 10, r = 20, l = 20)\n  )\n\n# View\nmap\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){fig-alt='A map showing emissions (in tons) per square mile for each state in the US, with New Jersey producing the most.' width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Sector Donut\"}\n# Emissions by sector\nsector <- emissions_cleaned_non_point %>%\n  group_by(eis_sector) %>%\n  summarise(emissions_tons = sum(emissions_tons)) %>%\n  # Combine subsectors\n  mutate(sector = case_when(\n    str_detect(eis_sector, \"Agriculture\") ~ \"Agriculture\",\n    str_detect(eis_sector, \"Biogenics\") ~ \"Biogenics\",\n    str_detect(eis_sector, \"Bulk Gasoline\") ~ \"Bulk Gasoline Terminals\",\n    str_detect(eis_sector, \"Commercial Cooking\") ~ \"Commercial Cooking\",\n    str_detect(eis_sector, \"Dust\") ~ \"Dust\",\n    str_detect(eis_sector, \"Fires\") ~ \"Fires\",\n    str_detect(eis_sector, \"Fuel Comb\") ~ \"Fuel Comb\",\n    str_detect(eis_sector, \"Gas Stations\") ~ \"Gas Stations\",\n    str_detect(eis_sector, \"Industrial Processes\") ~ \"Industrial Processes\",\n    str_detect(eis_sector, \"Miscellaneous\") ~ \"Misc\",\n    str_detect(eis_sector, \"Mobile\") ~ \"Mobile\",\n    str_detect(eis_sector, \"Solvent\") ~ \"Solvent\",\n    str_detect(eis_sector, \"Waste Disposal\") ~ \"Waste Disposal\"\n  )) %>%\n  mutate(plot = ifelse(sector == \"Mobile\", \"Mobile\", \"Other\")) %>%\n  group_by(plot) %>%\n  summarise(emissions_tons = sum(emissions_tons)) %>%\n  mutate(label = paste0(plot, \" (\", round((emissions_tons/sum(emissions_tons))*100, 0), \" %)\"))\n  \n# Donut chart\nsector_donut <- ggplot(sector, aes(x = 2, y = emissions_tons, fill = label)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  # Use polar coordinates\n  coord_polar(theta = \"y\", start = 0) + \n  # Set base theme\n  theme_void() +  \n  # Create hole\n  xlim(0.5, 2.5) +\n  # Set legend\n  theme(\n        legend.position = \"right\",\n        \n        legend.title = element_text(family = subtext,\n                                    size = 20,\n                                    face = \"bold\"),\n        \n        legend.text = element_text(family = subtext,\n                                   size = 15),\n        \n        plot.margin = margin(r = 20, l = 20)\n        \n        \n        ) + \n  labs(fill = \"Sector\") +\n  \n  # use gloom palette\n  scale_fill_paletteer_d(\"palettetown::gloom\")\n\n# View\nsector_donut\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){fig-alt='A donut chart showing the breakdown of emissions in tons by sector, with the mobile sector comprising the majority 99% of emissions.' width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Other Sector Donut\"}\n# Emissions by sector\nsector_other <- emissions_cleaned_non_point %>%\n  group_by(eis_sector) %>%\n  summarise(emissions_tons = sum(emissions_tons)) %>%\n  # Combine subsectors\n  mutate(sector = case_when(\n    str_detect(eis_sector, \"Agriculture\") ~ \"Agriculture\",\n    str_detect(eis_sector, \"Biogenics\") ~ \"Biogenics\",\n    str_detect(eis_sector, \"Bulk Gasoline\") ~ \"Bulk Gasoline Terminals\",\n    str_detect(eis_sector, \"Commercial Cooking\") ~ \"Commercial Cooking\",\n    str_detect(eis_sector, \"Dust\") ~ \"Dust\",\n    str_detect(eis_sector, \"Fires\") ~ \"Fires\",\n    str_detect(eis_sector, \"Fuel Comb\") ~ \"Fuel Comb\",\n    str_detect(eis_sector, \"Gas Stations\") ~ \"Gas Stations\",\n    str_detect(eis_sector, \"Industrial Processes\") ~ \"Industrial Processes\",\n    str_detect(eis_sector, \"Miscellaneous\") ~ \"Misc\",\n    str_detect(eis_sector, \"Mobile\") ~ \"Mobile\",\n    str_detect(eis_sector, \"Solvent\") ~ \"Solvent\",\n    str_detect(eis_sector, \"Waste Disposal\") ~ \"Waste Disposal\"\n  )) %>%\n  group_by(sector) %>%\n  summarise(emissions_tons = sum(emissions_tons)) %>%\n  mutate(label = paste0(sector, \" (\", round((emissions_tons/sum(emissions_tons))*100, 2), \" %)\")) %>%\n  filter(!sector == \"Mobile\")\n  \n# remove mobile sector for further analysis\nother_sector <- ggplot(sector_other, aes(x = 2, y = emissions_tons, fill = label)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  \n  # use polar coordinates\n  coord_polar(theta = \"y\", start = 0) + \n  \n  # set base theme\n  theme_void() +  \n  \n  # create hole\n  xlim(0.5, 2.5) + \n  \n  # set legend\n  theme(\n         legend.position = \"right\",\n        \n        legend.title = element_text(family = subtext,\n                                    size = 20,\n                                    face = \"bold\"),\n        \n        legend.text = element_text(family = subtext,\n                                   size = 15),\n        \n        plot.margin = margin(r = 20, l = 20)\n        \n        ) + \n  labs(fill = \"Other\") +\n  \n  # use gloom palette\n  scale_fill_paletteer_d(\"palettetown::gloom\")\n\n# View\nother_sector\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){fig-alt='A donut chart showing the breakdown of emissions in tons by sector, with the mobile sector comprising the majority 99% of emissions.' width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}