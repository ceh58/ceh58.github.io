[
  {
    "objectID": "DELETE-LATER/practice.html",
    "href": "DELETE-LATER/practice.html",
    "title": "Here is my level one header",
    "section": "",
    "text": "Here is my level one header\nHere is my first paragraph\nHere is my second paragraph, where you can read more about MEDS.\nThis is very important text!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "some text here"
  },
  {
    "objectID": "about.html#what-i-do-for-work",
    "href": "about.html#what-i-do-for-work",
    "title": "About",
    "section": "",
    "text": "some text here"
  },
  {
    "objectID": "about.html#what-i-do-for-fun",
    "href": "about.html#what-i-do-for-fun",
    "title": "About",
    "section": "What I do for fun",
    "text": "What I do for fun\n\ngive the people what they want, which is fun stuff\n\nUnderwater photography: https://www.instagram.com/carmen.underwater/\n\nhere is a line\nhere is another line"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Carmen Hoyt",
    "section": "",
    "text": "Aloha! My name is Carmen, and I am a student in the Master of Environmental Data Science program at the University of California, Santa Barbara. My journey began on the Gulf Coast of Florida, where I fell in love with the ocean. I was inspired to pursue a B.S. in Biology and a B.S. Earth and Ocean Sciences at Duke University (2018), after which I quite literally “dove” into opportunities to work and travel all over the world. Some of the highlights include aquaculture in Palau, SCUBA instruction in Indonesia and the Turks and Caicos, and environmental consulting in Hawai’i. When I’m not at work, you can find me in the ocean surfing, sailing, or taking underwater photos!"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Carmen Hoyt",
    "section": "Education",
    "text": "Education\nDuke University, B.S. Biology and B.S. Earth and Ocean Sciences (2018)\nUniversity of California, Santa Barbara Master of Environmental Data Science (2025)"
  },
  {
    "objectID": "index.html#professional-experience",
    "href": "index.html#professional-experience",
    "title": "Carmen Hoyt",
    "section": "Professional Experience",
    "text": "Professional Experience\nBiologist - AECOS, Kane’ohe, Hawai’i (1/23–7/24)\nAt AECOS, I analyzed and visualized environmental data using R, Python, ArcMap and ArcGIS Pro. I conducted natural resource surveys and collected geospatial data using a Trimble Geo 7x and an Autel Evo II drone. I produced technical reports using Microsoft Office and Adobe Acrobat, and I worked with clients to produce deliverables in a timely manner.\nSenior Research Assistant – Oceanic Institute at Hawai’i Pacific University Waimanalo, Hawai’i (6/21–1/23)\nWhile working as a Senior Research Assistant, I managed the algae lab and oversaw the installation and operation of two photobioreactors purchased under a federal grant awarded by the U.S. Department of Education. I collected long-term data, developed lab protocols, and was promoted to Senior Research Assistant for showing leadership and proficiency in all departments. Additionally, I created a marketing role for social media updates and outreach on Instagram and Facebook.\nAssistant Manager/SCUBA Instructor – Atlantic Pro Divers, Jacksonville Beach, Florida (5/20–7/21)\nAs Assistant Manager, I monitored store inventory and formulated business newsletters to support marketing and drive sales. I demonstrated excellent customer service and planned PADI courses. I learned how to balance business expenses with profits, and I was given significant authority in shop decisions. When I wasn’t managing the shop, I was teaching the PADI courses that we offered as a 5-star dive center.\nWaterfront Assistant – School for Field Studies, South Caicos, Turks and Caicos Islands (8/19–5/20)\nThe Waterfront Assistant role with the School for Field Studies in the Turks and Caicos Islands was a 1-year contract that was cut a few months short due to COVID-19. My role during the program was to conduct and supervise field research as well as guide recreational dives and snorkels for college students. I was responsible for operating and maintaining three Carolina Skiffs and assisting SCUBA courses as a PADI Divemaster. When I was not in or on the water, I fulfilled more administrative roles aiding in the smooth operation of everyday life on campus including outreach to the local community.\nOpen Water SCUBA Instructor – PADI, Gili Trawangan, Indonesia (2/19–8/19)\nI worked as a PADI professional (Divemaster and Instructor) in Indonesia, the Turks and Caicos, and Florida. Since this role spanned different countries, I stayed up to date with PADI’s international rules and regulations to ensure quality control over the courses I taught.\nAquaculture Intern – Indigo Seafood Palau, Inc., Koror, Palau (8/18–2/19)\nThis internship my first introduction to aquaculture. I was responsible for the complete larval rearing of coral trout (Plectropomus leopardus) including egg collection, production of live feeds, and hatchery management. I also served as the lead business operator during my time, which included managing finances and other team members.\nLab Technician – Silliman Lab at Duke University Marine Laboratory (8/16–8/17)\nWorking as a summer time Research Technician for the Silliman Lab, I assisted graduate student (now Dr.) Stacy Zhang in the setup and maintenance of large-scale experiments focused on seagrass beds. I was responsible for collecting and recording data both in the field and in the lab in the form of fish surveys and seagrass biomass analysis. I learned crucial steps in the scientific method as well as gained exposure to publications and literature reviews."
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Blog",
    "section": "",
    "text": "Analyzing the Impact of the Thomas Fire in Python\n\n\n\nPython\n\n\nEDS220\n\n\nLandsat\n\n\n\n\n\n\n\nCarmen Hoyt\n\n\nDec 4, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/index.html",
    "href": "posts/2024-12-01-thomas-fire/index.html",
    "title": "Analyzing the Impact of the Thomas Fire in Python",
    "section": "",
    "text": "About\nThe Thomas Fire burned over 280,000 acres (about 440 square miles) across Ventura and Santa Barbara counties in December 2017, the largest wildfire in modern California history at the time. The main catalyst for the fire’s rapid spread was unseasonably strong Santa Ana wind that brought warm air and low humidity. In the end, 1,063 structures were lost, over 104,607 residents were forced to leave their homes, and damages totaled over $2.2 billion. Lasting environmental effects of the fire included poor air quality and mudflows during the successive rainy season as a result of the vegetation loss1.\nThe first analysis2 uses imagery taken by Landsat 8 on January 16, 2018 to highlight the burn scar left by the Thomas Fire after it was considered fully contained (January 12, 2018). By assigning infrared bands to visible colors (short wave infrared to ‘red’, near infrared to ‘green’, and red to ‘blue’), we can easily distinguish the burn scar from the surrounding vegetation. Bare earth/dead vegetation reflects swir (short wave infrared), appearing red, and healthy vegetation reflects nir (near infrared), appearing green, in the false color image3. We can then match the burn scar with the Thomas Fire perimeter, isolated from a fire perimeters dataset.\nThe second analysis4 uses Air Quality Index (AQI) data from the US Environmental Protection Agency to visualize the impact on the AQI of the 2017 Thomas Fire.\n\n\nHighlights\nAnalysis 1:\n\nThis task explores assigning infrared bands to visible colors to obtain false color imagery.\nNecessary steps include cleaning rasters with the rioxarray package as well as filtering geo-dataframes with geopandas package.\nIt is essential to match the Coordinate Reference Systems (CRSs) of shapefiles and rasters to obtain the final figure.\n\nAnalysis 2:\n\nThis task uses pandas to wrangle dataframes.\nIt requires working with various datatypes, such as dates.\nUsing matplotlib.pyplot, we can create engaging visualizations!\n\n\n\nRepository\nMore detailed information can be found on my Thomas Fire GitHub Repository.\n\nRepository structure:\n├── data\n│  ├── thomas_fire.cpg\n│  ├── thoams_fire.dbf\n│  ├── thomas_fire.prj\n│  ├── thomas_fire.shp\n│  └── thomas_fire.shx\n├── .gitignore\n├── README.md\n├── aqi-analysis.ipynb\n├── false-color-analysis.ipynb\n└── fire-perimeter.ipynb\n\n\n\nDataset Descriptions\nLandsat Data:\nThe landsat dataset used in this analysis is a cleaned, simplified collection of bands (red, green, blue, nir, swir) from Landsat Collection 2 Level-2 (collected by Landsat 8 satellite) that was prepared specifically for this project.\nFire Perimeters Data:\nThe fire perimeters dataset is an open-source dataset that contains information about the spatial distrubtion of past fires in California published by the State of California (and downloaded as a shapefile).\nAQI Data:\nThis analysis directly imports the US AQI (by county) data for 2017 and 2018 via zip file. Both datasets will need to be filtered for Santa Barbara county.\n\n\nAnalysis\n\nPart 1\nDerived from fire-perimeter.ipynb.\nFirst, import all necessary packages.\nimport os\nimport pandas as pd\nimport geopandas as gpd\nimport xarray as xr\nThen, import the fire perimeters dataset (shapefile) and filter for the 2017 Thomas Fire. Save the filtered dataset in a format of your choice. I chose to save it as a shapefile due to its versatility and familiarity.\nNote: I saved the full fire perimeters dataset in my data/ folder in a separate no_push/ folder that was added to my .gitignore due to the size of the data.\n# Create filepath\nfp = os.path.join(\"data\", \"no_push\", \"California_Fire_Perimeters_(all).shp\")\n\n# Read in data\nfire_perimeter = gpd.read_file(fp)\n\n# Lower column names\nfire_perimeter.rename(columns=str.lower, inplace=True)\n\n# Select Thomas Fire boundary by filtering for name and year\nthomas_fire = fire_perimeter.loc[(fire_perimeter['fire_name'] == \"THOMAS\") & \n                                 (fire_perimeter['year_']== 2017)]\n                                 \n# Save Thomas Fire boundary as a shapefile\nthomas_fire.to_file(os.path.join(\"data\", \"thomas_fire.shp\"))\n\n\nPart 2\nDerived from false-color-analysis.ipynb.\nFirst, import all necessary packages.\nimport os\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport xarray as xr\nimport rioxarray as rioxr\nimport numpy as np\nNext, import the landsat data (which has been pre-processed and saved on the server at the given filepath: /courses/EDS220/data/hwk4_landsat_data\", \"landsat8-2018-01-26-sb-simplified.nc).\n# Import data\nfp = os.path.join(\"/courses/EDS220/data/hwk4_landsat_data\", \"landsat8-2018-01-26-sb-simplified.nc\")\nlandsat = rioxr.open_rasterio(fp)\nlandsat\n\n\n\n\n\nNotice that the raster has a dimension, band, of size one. This dimension is not necessary, so we will use the squeeze() and drop_vars() functions to remove it.\n# Drop the 'band' dimension\nlandsat = landsat.squeeze().drop_vars('band')\n\n# Confirm 'band' was dropped\nprint(landsat.dims, landsat.coords)\nConfirm that band no longer appears on the list of dimensions (landsat.dims).\n\n\n\n\n\nNow we can plot a true color image. To do this, we must select the ‘red’, ‘green’, and ‘blue’ bands, in that order, and assign them to the ‘red’, ‘green’, and ‘blue’ colors using .imshow().\n# Select 'red', 'green', and 'blue' variables and plot\nlandsat[['red', 'green', 'blue']].to_array().plot.imshow()\nSince there are outliers in these data, the initial plot is black and white and gives us the following warning message:\n\n\n\n\n\nIn order to de-weight the outliers and properly scale each band, we will set the robust parameter in .imshow() to True.\n# Adjust the scale for a true color plot\nlandsat[['red', 'green', 'blue']].to_array().plot.imshow(robust = True)\nThis produces our true color image:\n\n\n\n\n\nTo create our false color image, we must assign the short wave infrared band (‘swir22’) to the ‘red’ color, the near infrared band (‘nir08’) to the ‘green’ color, and ‘red’ band to the ‘blue’ color using the same function.\n# Create a false color image\nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(robust = True)\nThe result is our false color image:\n\n\n\n\n\nFinally, we can create our figure.\nIn order to do this, we must import the Thomas Fire perimeter shapefile we previously saved in Part 1, thomas_fire.shp, and check to see that the CRS of the shapefile matches that of the landsat data using .crs (from the geopandas package) for the shapefile and .rio.crs (from the rioxarray package) for the raster.\n# Import Thomas Fire shapefile\nthomas_fire = gpd.read_file(os.path.join(\"data\", \"thomas_fire.shp\"))\n\n# Make sure CRSs match\nif thomas_fire.crs == landsat.rio.crs:\n    print(\"CRSs match!\")\nelse:\n    landsat = landsat.rio.reproject(thomas_fire.crs)\n    assert landsat.rio.crs == thomas_fire.crs\n    print(\"We matched the CRSs!\")\n\n\n\n\n\nTo plot the image, we must create an aspect ratio to correctly display the size. The aspect ratio is the width/height.\n# Map the false color image with the fire perimeter\nlandsat_aspect_ratio = landsat.rio.width/landsat.rio.height\nThen, the figure is set up using the aspect ratio, and each figure element is plotted in sequence using the matplotlib package.\n# Setup figure\nfig, ax = plt.subplots(figsize = (6, 6*landsat_aspect_ratio))\n\n# Turn the axis off\nax.axis(\"off\")\n\n# Plot the false color image on the figure\nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(ax = ax,\n                                                        robust = True)\n\n# Add Thomas Fire shapefile as a boundary on the figure\nthomas_fire.boundary.plot(ax = ax,\n                         color = \"black\")\n\n# Add legend to the figure\nax.legend(labels = [\"Fire Boundary\"])\n\n# Add annotation to the figure\nfig.text(0.5, 0.1,\n        'Data Source: CAL FIRE via Data.gov &  Microsof Planetary Computer data catalogue',\n         ha='center', va='center', fontsize=8, color='black', fontstyle='italic')\n\nfig.text(0.395, 0.08, \n         'Date Accessed: 11/19/24',\n         ha='right', va='center', fontsize=8, color='black', fontstyle='italic')\n\n# Add title\nax.set_title(\"Thomas Fire Scar (2017)\", fontsize=14, fontweight='bold')\n\nplt.show()\nOur final figure shows the burn scar of the Thomas Fire, displayed in red and outlined by the fire boundary.\n\n\n\n\n\n\n\nPart 3\nDerived from aqi-analysis.ipynb.\nFirst, import all necessary packages.\nimport pandas as pd\nimport matplotlib.pyplot as plt\nNext, read in the data from the links and concat (stack) the dataframes. Then, clean the column names.\n# Read in data\naqi_17 = pd.read_csv(\"https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2017.zip\", compression = 'zip')\naqi_18 = pd.read_csv(\"https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2018.zip\", compression = 'zip')\n\n# Concat the two data frames\naqi = pd.concat([aqi_17, aqi_18])\n\n# Simplify column names\naqi.columns = (aqi.columns\n                  .str.lower()\n                  .str.replace(' ','_'))\nFilter for county “Santa Barbara,” and remove the state_name, county_name, state_code, and county_code columns.\n# Select only data from Santa Barbara County\naqi_sb = aqi[aqi['county_name'] == \"Santa Barbara\"]\n\n# Remove specified columns\naqi_sb = aqi_sb.drop(columns = ['state_name', 'county_name', 'state_code', 'county_code'])\nUpdate the date column to datetime object, and then set it as the index.\n# Update `date` to datetime object\naqi_sb.date = pd.to_datetime(aqi_sb.date)\n\n# Update the index to be the date column\naqi_sb = aqi_sb.set_index('date')\nCalculate the 5-day rolling mean, and add it as a new column.\n# Add AQI 5-day rolling mean to `aqi_sb` data frame\naqi_sb['five_day_average'] = aqi_sb['aqi'].rolling('5D').mean()\nPlot the AQI for Santa Barbara county 2017-2018.\n# Plot AQI and AQI rolling mean \naqi_sb.drop(columns = 'number_of_sites_reporting').plot.line(y = ['aqi', 'five_day_average'])\n\n# Add title\nplt.title(\"AQI in Santa Barbara County 2017-2018\")\n\n# Label x-axis\nplt.xlabel(\"Date\")\n\n# Label y-axis\nplt.ylabel(\"AQI\")\n\n# Add legend\nplt.legend(['AQI', 'Five Day Average'])\n\n\n\n\n\nOur graph clearly shows a spike in AQI at the time of the Thomas Fire.\n\n\n\nReferences\nLandsat data:\nMicrosoft Open Source, Matt McFarland, Rob Emanuele, Dan Morris, & Tom Augspurger. (2022). microsoft/PlanetaryComputer: October 2022 (2022.10.28). Zenodo. https://doi.org/10.5281/zenodo.7261897 Accessed: November 19, 2024\nFire perimeter data:\nState of California, Kimberly Wallin. (2024). CAL FIRE: May 2024 (2024.05.14). https://catalog.data.gov/dataset/california-fire-perimeters-all-b3436 Accessed: November 19, 2024\nAQI Data:\nU.S. Enivornmental Protection Agency. (2024). Air Quality Index Daily Values Report: July 2024 (2024.07.23). https://www.epa.gov/outdoor-air-quality-data/air-quality-index-daily-values-report Accessed: October 22, 2024\n\n\n\n\n\nFootnotes\n\n\nRead more about the Thomas fire here.↩︎\nThis analysis was part of EDS 220: Working with Environmental Datasets - Homework Assignment 4. See the assignment guidelines here.↩︎\nRead more about false color imagery here.↩︎\nThis analysis was part of EDS 220: Working with Environmental Datasets - Homework Assignment 2. See the assignment guidelines here.↩︎"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/index.html#footnotes",
    "href": "posts/2024-12-01-thomas-fire/index.html#footnotes",
    "title": "Analyzing the Impact of the Thomas Fire in Python",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nRead more about the Thomas fire here.↩︎\nThis analysis was part of EDS 220: Working with Environmental Datasets - Homework Assignment 4. See the assignment guidelines here.↩︎\nRead more about false color imagery here.↩︎\nThis analysis was part of EDS 220: Working with Environmental Datasets - Homework Assignment 2. See the assignment guidelines here.↩︎"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/index.knit.html#footnotes",
    "href": "posts/2024-12-01-thomas-fire/index.knit.html#footnotes",
    "title": "Using False Color Imagery to Visualize the Impact of the Thomas Fire in Python",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nRead more about the Thomas fire here.↩︎\nRead more about false color imagery here.↩︎\nSee the assignment guidelines here.↩︎"
  }
]